<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API.WindowsService</name>
    </assembly>
    <members>
        <member name="M:API.WindowsService.Controllers.AudioJobController.Post(API.WindowsService.Models.AudioJobRequestModel)">
            <summary>
            Create a new job
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:API.WindowsService.Controllers.AudioJobController.Delete(System.Guid)">
            <summary>
            Delete a job
            </summary>
            <param name="jobId">Job id returned when creating new job</param>
        </member>
        <member name="M:API.WindowsService.Controllers.PauseController.Pause(System.Guid,Contract.JobType)">
            <summary>
            Pause a job
            </summary>
            <param name="jobId">Job id</param>
            <returns>Number of tasks paused or zero if none were found in the queued state for the requested job</returns>
        </member>
        <member name="M:API.WindowsService.Controllers.ResumeController.Resume(System.Guid,Contract.JobType)">
            <summary>
            Resume a job
            </summary>
            <param name="jobId">Job id</param>
            <returns>Number of tasks set to active or zero if none were found in the queued state for the requested job</returns>
        </member>
        <member name="M:API.WindowsService.Controllers.StatusController.Get">
            <summary>
            Get status for all jobs
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.WindowsService.Controllers.StatusController.Get(System.Guid)">
            <summary>
            Get status for a specific job
            </summary>
            <param name="id">ID of job to get status of</param>
            <returns></returns>
        </member>
        <member name="M:API.WindowsService.Controllers.StatusController.UpdateProgress(Contract.BaseJob)">
            <summary>
            Update progress of an active job.
            
            This also serves as a heartbeat, to tell the server
            that the client is still working actively on the job
            </summary>
            <param name="job"></param>
        </member>
        <member name="M:API.WindowsService.Filters.ExceptionFilter.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>Raises the exception event.</summary>
            <param name="actionExecutedContext">The context for the action.</param>
        </member>
        <member name="M:API.WindowsService.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
    </members>
</doc>
